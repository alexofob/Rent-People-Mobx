/* global window localStorage */
/* eslint class-methods-use-this: "off" */
import MobxReactForm from 'mobx-react-form';

// import Auth0 from 'auth0-js';

class LoginForm extends MobxReactForm {
/*
  constructor(fields, plugins, viewStore) {
    super(fields, plugins);
    this.viewstore = viewStore;
    // Configure Auth0
   this.auth0 = new Auth0({
      clientID: 'TXWykyAVhmmTmkdnkFiDktvRkVFkIIx2',
      domain: 'rentpeople.auth0.com',
      responseType: 'token',
      callbackURL: window.location.href,
    });
  }  */
  /**
    On Submit form- Initiate the process to send a code to user email address
    Step 1 involves validating the user input
    Step 2 if successful validation request email code else notify user of error
   */
  login = (e) => {
    e.preventDefault();

    this.validate()
      .then(isValid => (isValid ? this.requestEmailCode() : this.handleError()));
  };

  requestEmailCode() {
    // const { email } = this.values();
    // redirects the call to auth0 instance
  /*  this.auth0.requestEmailCode(email, (err) => {
      if (err) {
        this.viewStore.notifyUser(err.error_description);
        return;
      }
    // the request was successful and you should receive
    // an email with the code at the specified address
    }); */
  //  this.viewStore.notifyUser('Login Code has been sent to your email address.' +
  //  ' Please use the code to login');
    // get field values
    console.log('Form Values!', this.values());
  }

  handleError() {
    // get all form errors
    console.log('All form errors', this.errors());
    // invalidate the form with a custom error message
    this.invalidate('Validation not successful');
  //  this.viewStore.notifyUser('Validation not sucessful');
  }

  /* parseHash(hash) {
    // uses auth0 parseHash method to extract data from url hash
    const authResult = this.auth0.parseHash(hash);
    if (authResult && authResult.idToken) {
      this.setToken(authResult.idToken);
    }
  } */


}

export default LoginForm;
